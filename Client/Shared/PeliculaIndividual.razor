<div class="me-2 mb-2" style="text-align:center">
    @* <p>Título : @((MarkupString)pelicula.Titulo)
    @if (DateTime.Today.Subtract(pelicula.FechaLanzamiento).Days <= 14)
    {
    <span style="color: red;">(!Nuevo!)</span>
    }
    </p>
    <p>Fecha de lanzamiento: <b>@pelicula.FechaLanzamiento</b></p>
    @if (MostrarBotones)
    {
    <div><button @onclick="(() => EliminarPeli.InvokeAsync(pelicula))">Borrar</button></div>
    } *@

    <a href="@urlPelicula">
        <img src="@pelicula.Poster" alt="Poster" style="width:225px; height:300px" class="rounded-3" />
    </a>
    <p style="max-width: 225px; height: 44px; font-size: 15px; font-weight: bold">
        <a href="@urlPelicula" class="text-decoration-none">@((MarkupString)pelicula.Titulo)</a>
    </p>
    <AuthorizeView Roles="admin">
        <div>
            <a class="btn btn-info" href="peliculas/Editar/@pelicula.Id">Editar</a>
            <button type="button" class="btn btn-danger" @onclick="(() => EliminarPeli.InvokeAsync(pelicula))">Borrar</button>
        </div>
    </AuthorizeView>

</div>


@code {
    [Parameter]
    [EditorRequired]
    public Pelicula pelicula { get; set; } = null!;
    [Parameter]
    public bool MostrarBotones { get; set; } = false;
    [Parameter]
    public EventCallback<Pelicula> EliminarPeli { get; set; }
    private string urlPelicula = string.Empty;

    protected override void OnInitialized()
    {
        urlPelicula = $"pelicula/{pelicula.Id}/{pelicula.Titulo.Replace(" ", "-")}";
    }

    void Eliminar()
    {
        Console.WriteLine($"Eliminando la película {pelicula.Titulo}");
    }
}